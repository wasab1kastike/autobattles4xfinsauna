name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  changes:
    name: Detect deploy-impacting changes
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.decision.outputs.should_deploy }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          since_last_remote_commit: true
          files: |
            assets/**
            build-info.ts
            package.json
            package-lock.json
            postcss.config.js
            public/**
            scripts/**
            src/**
            tailwind.config.ts
            tests/**
            tools/**
            tsconfig.json
            vite.config.ts
            vitest.config.ts

      - id: decision
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "should_deploy=true" >> "$GITHUB_OUTPUT"
            echo "Manual dispatch detected, forcing deployment."
          elif [ "${{ steps.changed-files.outputs.any_changed }}" = "true" ]; then
            echo "should_deploy=true" >> "$GITHUB_OUTPUT"
            echo "Deploy-impacting changes detected."
          else
            echo "should_deploy=false" >> "$GITHUB_OUTPUT"
            echo "No deploy-impacting changes detected. Skipping build and deploy jobs."
          fi

  build:
    needs: changes
    if: needs.changes.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Pull LFS objects
        run: |
          git lfs install --local
          git lfs fetch --all
          git lfs checkout

      - name: Verify LFS checkout
        run: |
          ls -l assets/units | head -5
          file assets/units/saunoja-01.png || true

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci

      - name: Determine public base path
        run: |
          if [ -f public/CNAME ]; then
            echo "PUBLIC_BASE_PATH=/" >> "$GITHUB_ENV"
          else
            echo "PUBLIC_BASE_PATH=/${{ github.event.repository.name }}/" >> "$GITHUB_ENV"
          fi

      - run: npm run build

      - name: Smoke-check dist output
        run: |
          test -f dist/index.html
          TITLE=$(grep -o '<title>.*</title>' dist/index.html || true)
          if [ -z "$TITLE" ]; then
            echo 'dist/index.html is missing a <title> element'
            exit 1
          fi
          test -f dist/404.html

      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist
          name: site-dist

  deploy:
    needs: build
    if: needs.changes.outputs.should_deploy == 'true'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: site-dist

  skip-notice:
    needs: changes
    if: needs.changes.outputs.should_deploy != 'true'
    runs-on: ubuntu-latest
    steps:
      - run: echo "No deploy-impacting files changed; skipping Pages deployment."
