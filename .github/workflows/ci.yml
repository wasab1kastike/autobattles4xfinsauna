name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  verify-pages:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      - run: npm ci
      - run: npm run build
      - name: Run test suite (includes docs mirror verification)
        run: npm test

      # Sanity checks: dist exists and has required files
      - name: Sanity checks
        run: |
          test -f dist/index.html
          test -f dist/404.html

      # Verify that asset URLs use root-relative /assets/ prefixes
      - name: Verify root-relative asset URLs in index.html
        run: |
          if ! grep -qE "=(\"|')/assets/" dist/index.html; then
            echo "❌ Missing root-relative /assets/ references in index.html"
            exit 1
          fi

      # Guard against bare asset paths without the base prefix
      - name: Check for bare asset paths
        run: |
          node <<'NODE'
          const fs = require('fs');
          const html = fs.readFileSync('dist/index.html', 'utf8');
          const attrRe = /(href|src)=["']([^"'#?]+)["']/g;
          const offenders = [];
          let match;
          while ((match = attrRe.exec(html))) {
            const value = match[2];
            if (!value.startsWith('/') && /^(\.{0,2}\/)?assets\//.test(value)) {
              offenders.push(value);
            }
          }
          if (offenders.length) {
            console.error('❌ Found relative asset references without leading slash:', offenders);
            process.exit(1);
          }
          NODE

      # Verify that all referenced JS/CSS files actually exist
      - name: Verify asset files exist
        run: |
          node <<'NODE'
          const fs = require('fs');
          const path = require('path');

          const html = fs.readFileSync('dist/index.html', 'utf8');
          const attrRe = /(href|src)=["']([^"'#?]+)["']/g;
          const misses = [];
          let match;

          while ((match = attrRe.exec(html))) {
            const value = match[2];
            if (value.startsWith('http://') || value.startsWith('https://') || value.startsWith('//')) {
              continue;
            }
            if (!value.startsWith('/')) {
              continue;
            }
            const relativePath = value.replace(/^\/+/, '');
            const filePath = path.join('dist', relativePath);
            if (!fs.existsSync(filePath)) {
              misses.push(`${value} -> ${filePath}`);
            }
          }

          if (misses.length) {
            console.error('Missing assets:', misses);
            process.exit(1);
          }
          NODE

      # Optional: quick local link check for 404.html presence
      - name: Ensure 404.html exists
        run: test -f dist/404.html
